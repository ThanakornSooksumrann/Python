# -*- coding: utf-8 -*-
"""BFS.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gU6jCYQu_RsDGxsVD_QG9eK_fxURV68G
"""

graph = {
'0' : ['1','3'],
'1' : ['0','2'],
'2' : ['1','3'],
'3' : ['0','2'],
'4' : ['5','6'],
'5' : ['4','6'],
'6' : ['4','5'],
'7' : ['8'],
'8' : ['7'],
}
visited = [] # List to keep track of visited nodes.
queue = [] #Initialize a queue
node = '';
nodef = '';
def bfs(visited, graph, node, nodef): 
  visited.append(node)
  queue.append(node)

  while queue: 
    s = queue.pop(0)
    print (s, end = " ")
    if s == nodef:
      break
    
    for neighbour in graph[s]: 
        if neighbour not in visited: 
          visited.append(neighbour)
          queue.append(neighbour)

node = input ("Input initial Node : ")
nodef = input ("Input final Node : ")
bfs(visited, graph, node, nodef)