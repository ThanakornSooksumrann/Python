# -*- coding: utf-8 -*-
"""bank_cluster.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e-H30XPhPJS1Z0r84uYV7LzKf5wzdzNm
"""

import pandas as pd
import os 
import pandas as pd
from google.colab import files
import io
uploaded = files.upload()
bank = pd.read_csv(io.BytesIO(uploaded['bank_cluster.csv']))
bank.head()

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
points = bank.iloc[:, :].values
x = points[:, 0]
y = points[:, 3]
plt.scatter(x, y, s=50, alpha=0.7) #s = ขนาดของจุด, alpha =ระดับความคมชัดของจุด
plt.xlabel('Age')
plt.ylabel('Income')

from sklearn.preprocessing import LabelEncoder
df = bank.copy()
encoder = LabelEncoder()
df['sex'] = encoder.fit_transform(df['sex'])
df['region'] = encoder.fit_transform(df['region'])
df['married'] = encoder.fit_transform(df['married'])
df['car'] = encoder.fit_transform(df['car'])
df['save_act'] = encoder.fit_transform(df['save_act'])
df['current_act'] = encoder.fit_transform(df['current_act'])
df['mortgage'] = encoder.fit_transform(df['mortgage'])
df.head()

from sklearn.cluster import KMeans
points = df.iloc[:, :].values
inertia = []
for i in range(1, 20):
    kmeans = KMeans(n_clusters = i,  max_iter = 300, random_state = 0)
    kmeans.fit(points)
    inertia.append(kmeans.inertia_)
plt.plot(range(1, 20), inertia,'bx-') #bx- คือสัญลักษญ์ของกราฟแต่ละคลัสเตอร์
plt.title('The Elbow Method')
plt.xlabel('Number of clusters')
plt.ylabel('Inertia')
plt.show()

kmeans = KMeans(n_clusters=3, random_state=0)#cluster ดูจากตรงหักสอก
kmeans.fit(points)
df['Cluster'] = kmeans.labels_
df

centers = kmeans.cluster_centers_ 
newcenters = pd.DataFrame(centers)
newcenters.round(0).astype('int') #ปัดเศษขึ้นลงตามค่าที่ใกล้เคียง

kmeans.inertia_#คือค่า SSE

from sklearn.decomposition import PCA
pca = PCA(n_components=2).fit(df)
pca_2d = pca.transform(df)
newdf = pd.DataFrame(pca_2d);
newdf['Cluster'] = kmeans.labels_
newdf

sns.scatterplot(x=newdf[0], y=newdf[1], hue="Cluster", data=newdf, palette='Paired', s=90, alpha = 0.5,cmap = 'viridis');
plt.xlabel('x')
plt.ylabel('y')
plt.legend(loc='best');

newdf.to_csv('new_bankcluster.csv',index=False)

"""กลุ่มที่ 2 ลูกค้าของเราคือคนที่รายได้น้อยที่ต้องการบัตรเครดิตเพราะเขามีรายได้ที่น้อย

กลุ่มที่ 1 อายุเยอะแล้วแต่มีรายได้มากเราต้องเน้นการส่งประกันไปโฆษณาเรื่องการทำประกัน

กลุ่มที่ 0 อายุกลุ่มกลาง ๆ ที่มีรายได้กลาง ๆ เราอาจจะให้เป็นกลุ่มเป้าหมายในเรื่องการฝากเงิน
"""

#Data unseen
X=[[20,0 ,0 ,12000, 0, 0, 0, 0, 0, 0],
   [35,1 ,1 ,34500, 0, 0, 0, 1, 0, 0],
   [50,0 ,2 ,25000, 1, 1, 1, 1, 1, 1],
   [68,1 ,3 ,50000, 1, 0, 1, 1, 0, 1],
   [83,0 ,0 ,23000, 1, 1, 1, 1, 1, 0]]  #two unseen data
C_clustered=kmeans.predict(X)
print(C_clustered)